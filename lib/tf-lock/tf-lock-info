#!/bin/bash
set -eEuo pipefail
root_module="${1:-"$PWD"}"
TF_BOL='^(â”‚ )?'  # beginning of line

uncolor() {
  sed -u 's/\x1b[^[:alpha:]]*[[:alpha:]]//g'
}
error2json() {
  printf '{'
  sed -rn '
    1,/'"$TF_BOL"'Lock Info:$/ d
    /'"$TF_BOL"'  /! {
      x
      s/\n//g
      p
      q
    }
    s/'"$TF_BOL"'  /"/
    s/: +/": "/
    s/$/",/
    H
  ' | tr -d '\n'
  echo '"lock":true}'
}


cd "$root_module"
###terraform init 2>/dev/null
error="$(
  # swap stdout and stderr:
  #terraform console 3>&2 2>&1 1>&3 <<< ""
  terraform force-unlock -force -- -1 3>&2 2>&1 1>&3 <<< ""
)" && status=$? || status=$?


if (( status == 0 )); then
  echo '{"lock": false}'
  exit 0

# print the first value labelled "ID:"
elif grep -Eq <<< "$error" -q ID:; then
  uncolor <<< "$error" | error2json
elif (
  ( uncolor <<< "$error" || true) |
    grep -Eq -m1 "$TF_BOL"$'\t''\* storage: object doesn'\''t exist$'
); then
  echo '{"lock": false}'
  exit 0
elif grep -Eq <<< "$error" 'Error: .*Backend initialization required, please run "terraform init"'; then
  terraform init >&2
  exec "$0" "$@"
else
  cat >&2 <<< "$error"
  exit "$status"
fi
